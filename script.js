// === Categorie definite ===
const CATEGORIE = {Sopravvivenza:["Alimentazione","Farmacia","Cane","Telefono fisso","Acqua","Gas","Elettricità","Auto","Moto"],Optional:["Ristorante","Spese di casa","Cosmesi/ capelli","Shopping","Sport","Cellulare"],Cultura:["Libri","Musica","Scuola Eva","Scuola Elena"],Extra:["Viaggi","Regali","Spese casa grandi"],Entrate:["Stipendio","Assegni familiari","Fotovoltaico","Altre entrate"]};
const $ = (sel)=>document.querySelector(sel);
const KEY="kakebo_movimenti_v1"; let MOVIMENTI=[]; try{MOVIMENTI=JSON.parse(localStorage.getItem(KEY)||"[]")}catch{MOVIMENTI=[]} const salva=()=>localStorage.setItem(KEY,JSON.stringify(MOVIMENTI));
const pad=(n)=>String(n).padStart(2,"0"); const todayStr=()=>{const d=new Date();return `${d.getFullYear()}-${pad(d.getMonth()+1)}-${pad(d.getDate())}`};
const parseDate=(s)=>{const [Y,M,D]=s.split("-").map(Number);return new Date(Y,M-1,D)}; const addDays=(d,n)=>{const x=new Date(d);x.setDate(x.getDate()+n);return x}; const startOfMondayWeek=(d)=>{const day=d.getDay();const offset=(day===0?-6:1-day);return addDays(d,offset)}; const endOfSundayWeek=(d)=>addDays(startOfMondayWeek(d),6);
function contabileMonthBounds(year,month){const first=new Date(year,month-1,1);const last=new Date(year,month,0);const prevLast=new Date(year,month-1,0);const prevLastDow=prevLast.getDay();let start=(prevLastDow>=1&&prevLastDow<=3)?startOfMondayWeek(prevLast):startOfMondayWeek(first);const lastDow=last.getDay();let endSunday=(lastDow===4||lastDow===5||lastDow===6||lastDow===0)?endOfSundayWeek(last):addDays(startOfMondayWeek(last),-1);const endExclusiveMonday=addDays(endSunday,1);return {startMonday:start,endExclusiveMonday}};
const tabIns=document.getElementById("tab-inserimento"),tabRiep=document.getElementById("tab-riepilogo"),tabSett=document.getElementById("tab-riepilogo-sett"); const secIns=document.getElementById("sezione-inserimento"),secRiep=document.getElementById("sezione-riepilogo"),secSett=document.getElementById("sezione-riepilogo-sett");
function switchTab(which){if(which==="ins"){tabIns.classList.add("active");tabRiep.classList.remove("active");tabSett.classList.remove("active");secIns.classList.remove("hidden");secRiep.classList.add("hidden");secSett.classList.add("hidden")}else if(which==="riep"){tabRiep.classList.add("active");tabIns.classList.remove("active");tabSett.classList.remove("active");secRiep.classList.remove("hidden");secIns.classList.add("hidden");secSett.classList.add("hidden");aggiornaRiepilogo()}else{tabSett.classList.add("active");tabIns.classList.remove("active");tabRiep.classList.remove("active");secSett.classList.remove("hidden");secIns.classList.add("hidden");secRiep.classList.add("hidden");aggiornaRiepilogoSettimanale()}};
tabIns.addEventListener("click",()=>switchTab("ins")); tabRiep.addEventListener("click",()=>switchTab("riep")); tabSett.addEventListener("click",()=>switchTab("sett"));
const inputData=$("#data"),inputImporto=$("#importo"),selTipo=$("#tipo"),selMacro=$("#macro"),selCat=$("#categoria"),inputNota=$("#nota"); inputData.value=todayStr();
function refreshMacroETree(){const tipo=selTipo.value; selMacro.innerHTML=""; selCat.innerHTML=""; let macros=[]; if(tipo==="entrata"){macros=["Entrate"]}else if(tipo==="mutuo"){macros=["Sopravvivenza"]}else{macros=["Sopravvivenza","Optional","Cultura","Extra"]} for(const m of macros){const o=document.createElement("option");o.value=m;o.textContent=m;selMacro.appendChild(o)} refreshCategorie()}
function refreshCategorie(){selCat.innerHTML=""; const macro=selMacro.value; const voci=CATEGORIE[macro]||[]; for(const v of voci){const o=document.createElement("option");o.value=v;o.textContent=v;selCat.appendChild(o)}}
selTipo.addEventListener("change",refreshMacroETree); selMacro.addEventListener("change",refreshCategorie); refreshMacroETree();
document.getElementById("form-movimento").addEventListener("submit",(e)=>{e.preventDefault(); const data=inputData.value; const importo=parseFloat(inputImporto.value); const tipo=selTipo.value; const macro=selMacro.value||(tipo==="entrata"?"Entrate":""); const categoria=selCat.value||""; const nota=(inputNota.value||"").trim(); if(!data||isNaN(importo)){alert("Controlla data e importo.");return} if(tipo!=="entrata"&&(!macro||!categoria)){alert("Seleziona macro e sotto-categoria.");return} if(tipo==="entrata"&&!categoria){alert("Seleziona la voce di entrata.");return} const mov={id:crypto.randomUUID(),data,importo,tipo,macro:(tipo==="entrata"?"Entrate":macro),categoria,nota}; MOVIMENTI.unshift(mov); salva(); renderTabella(); inputData.value=todayStr(); e.target.reset(); refreshMacroETree()});
document.getElementById("pulisci").addEventListener("click",()=>{document.getElementById("form-movimento").reset(); inputData.value=todayStr(); refreshMacroETree()});
document.getElementById("cancella-tutto").addEventListener("click",()=>{if(confirm("Sei sicuro di voler svuotare l'archivio locale? Questa azione è irreversibile.")){MOVIMENTI=[]; salva(); renderTabella(); aggiornaRiepilogo(); aggiornaRiepilogoSettimanale()}});
function renderTabella(){const tbody=document.querySelector("#tabella-movimenti tbody"); tbody.innerHTML=""; for(const m of MOVIMENTI){const tr=document.createElement("tr"); tr.innerHTML=`<td>${m.data}</td><td>${m.tipo}</td><td>${m.macro||""}</td><td>${m.categoria||""}</td><td>€ ${m.importo.toFixed(2)}</td><td>${m.nota||""}</td><td><button class="del" data-id="${m.id}">Elimina</button></td>`; tbody.appendChild(tr)} tbody.querySelectorAll("button.del").forEach(btn=>{btn.addEventListener("click",(ev)=>{const id=ev.currentTarget.getAttribute("data-id"); MOVIMENTI=MOVIMENTI.filter(x=>x.id!==id); salva(); renderTabella(); aggiornaRiepilogo(); aggiornaRiepilogoSettimanale()})})} renderTabella();
const inputMese=document.getElementById("mese-riepilogo"); (function(){const d=new Date(); inputMese.value=`${d.getFullYear()}-${pad(d.getMonth()+1)}`})();
function aggiornaRiepilogo(){if(!inputMese.value)return; const prefix=inputMese.value; const delmese=MOVIMENTI.filter(m=>(m.data||"").startsWith(prefix)); const totali={}; let entrate=0,spese=0; for(const m of delmese){if(m.tipo==="entrata"){entrate+=m.importo}else if(m.tipo==="mutuo"){spese+=m.importo; totali["Mutuo"]=(totali["Mutuo"]||0)+m.importo}else{spese+=m.importo; const key=m.macro||"Altro"; totali[key]=(totali[key]||0)+m.importo}} const ul=document.getElementById("totali-macro"); ul.innerHTML=""; const order=["Sopravvivenza","Optional","Cultura","Extra","Mutuo","Altro"]; let printed=false; for(const k of order){if(totali[k]>0){const li=document.createElement("li"); li.textContent=`${k}: € ${totali[k].toFixed(2)}`; ul.appendChild(li); printed=true}} if(!printed){const li=document.createElement("li"); li.textContent="Nessuna spesa registrata nel mese selezionato."; ul.appendChild(li)} const speseTot=Object.values(totali).reduce((a,b)=>a+b,0); const saldo=entrate-speseTot; document.getElementById("saldo-mese").textContent=`Entrate: € ${entrate.toFixed(2)} – Spese: € ${speseTot.toFixed(2)} → Saldo: € ${saldo.toFixed(2)}`} inputMese.addEventListener("change",aggiornaRiepilogo);
const inputMeseSett=document.getElementById("mese-riepilogo-sett"); (function(){const d=new Date(); inputMeseSett.value=`${d.getFullYear()}-${pad(d.getMonth()+1)}`})();
function formatRange(a,b){const dd=(x)=>String(x).padStart(2,"0"); return `${dd(a.getDate())}/${dd(a.getMonth()+1)} – ${dd(b.getDate())}/${dd(b.getMonth()+1)}`}
function aggiornaRiepilogoSettimanale(){if(!inputMeseSett.value)return; const [Y,M]=inputMeseSett.value.split("-").map(Number); const {startMonday,endExclusiveMonday}=contabileMonthBounds(Y,M); const tbody=document.querySelector("#tabella-riepilogo-sett tbody"); tbody.innerHTML=""; for(let cur=new Date(startMonday); cur<endExclusiveMonday; cur=addDays(cur,7)){const weekStart=new Date(cur); const weekEnd=endOfSundayWeek(weekStart); let entrate=0,speseSenzaMutuo=0; for(const m of MOVIMENTI){if(!m.data)continue; const d=parseDate(m.data); if(d>=weekStart && d<=weekEnd){if(m.tipo==="entrata")entrate+=m.importo; else if(m.tipo==="spesa")speseSenzaMutuo+=m.importo}} const saldo=entrate-speseSenzaMutuo; const tr=document.createElement("tr"); tr.innerHTML=`<td>${formatRange(weekStart,weekEnd)}</td><td>€ ${entrate.toFixed(2)}</td><td>€ ${speseSenzaMutuo.toFixed(2)}</td><td>€ ${saldo.toFixed(2)}</td>`; tbody.appendChild(tr)}} inputMeseSett.addEventListener("change",aggiornaRiepilogoSettimanale);
